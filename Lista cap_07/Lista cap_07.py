#Qest√£o 15
#A National Football League (NFL) faz pesquisa com torcedores a fim de desenvolver uma classifica√ß√£o para cada jogo de futebol (site da NFL, 24 de outubro de 2012). Cada jogo √© classificado em uma escala de 0 (sem import√¢ncia) a 100 (memor√°vel).
# As classifica√ß√µes dos f√£s para uma amostra aleat√≥ria de 12 jogos est√£o a seguir. 

import numpy as np

notas = [57, 20, 61, 57, 86, 80, 74, 79, 72, 83, 73, 74]

media = np.mean(notas)
desvio_pop = np.std(notas)               # errado para esse caso
desvio_amostral = np.std(notas, ddof=1)  # correto

print(f"M√©dia: {media:.2f}")
print(f"Desvio padr√£o populacional: {desvio_pop:.2f}")
print(f"Desvio padr√£o amostral: {desvio_amostral:.2f}")

#Quest√£o 18 
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

# Par√¢metros da distribui√ß√£o amostral
mu = 200               # M√©dia
sigma = 5              # Erro padr√£o (desvio padr√£o da m√©dia amostral)

# Criar intervalo de valores para o eixo x
x = np.linspace(mu - 4*sigma, mu + 4*sigma, 1000)
y = norm.pdf(x, mu, sigma)

# Plotando a distribui√ß√£o
plt.figure(figsize=(10, 5))
plt.plot(x, y, color='blue', label='Distribui√ß√£o amostral de xÃÑ')
plt.title('Distribui√ß√£o amostral da m√©dia (xÃÑ ~ N(200, 5))')
plt.xlabel('M√©dia amostral (xÃÑ)')
plt.ylabel('Densidade de probabilidade')
plt.axvline(mu, color='red', linestyle='--', label='M√©dia = 200')
plt.fill_between(x, y, where=(x >= mu - sigma) & (x <= mu + sigma), color='skyblue', alpha=0.5, label='¬±1 desvio padr√£o')
plt.legend()
plt.grid(True)
plt.show()

#Quest√£o 19 Uma popula√ß√£o tem uma m√©dia de 200 e um desvio padr√£o de 50. Suponha que uma amostra aleat√≥ria simples de tamanho 100 seja selecionada e x utilizada para estimar m. 
# a. Qual √© a probabilidade de que a m√©dia amostral esteja dentro de ¬± 5 da m√©dia populacional? 
# b. Qual √© a probabilidade de que a m√©dia amostral esteja dentro de ¬± 10 da m√©dia populacional?


from scipy.stats import norm

# Par√¢metros
mu = 200
sigma = 50
n = 100
erro_padrao = sigma / (n**0.5)

# a. Probabilidade de estar dentro de ¬±5
prob_a = norm.cdf(5 / erro_padrao) - norm.cdf(-5 / erro_padrao)

# b. Probabilidade de estar dentro de ¬±10
prob_b = norm.cdf(10 / erro_padrao) - norm.cdf(-10 / erro_padrao)

print(f"a. Probabilidade (¬±5): {prob_a:.4f} ou {prob_a*100:.2f}%")
print(f"b. Probabilidade (¬±10): {prob_b:.4f} ou {prob_b*100:.2f}%")

from scipy.stats import norm
import numpy as np

# Calif√≥rnia
mu_ca = 22
sigma_ca = 4
n_ca = 30
erro_padrao_ca = sigma_ca / np.sqrt(n_ca)
z_ca = 1 / erro_padrao_ca
prob_ca = norm.cdf(z_ca) - norm.cdf(-z_ca)

# Nova York
mu_ny = 42
sigma_ny = 4
n_ny = 45
erro_padrao_ny = sigma_ny / np.sqrt(n_ny)
z_ny = 1 / erro_padrao_ny
prob_ny = norm.cdf(z_ny) - norm.cdf(-z_ny)

print(f"Calif√≥rnia: P(¬±1 in) = {prob_ca:.4f} ou {prob_ca*100:.2f}%")
print(f"Nova York:  P(¬±1 in) = {prob_ny:.4f} ou {prob_ny*100:.2f}%")


#Quest√£o 28 O estado da Calif√≥rnia tem uma precipita√ß√£o m√©dia anual de 22 polegadas, enquanto o estado de Nova York tem uma precipita√ß√£o m√©dia anual de 42 polegadas (site da Current Results, 27 de outubro de 2012). Suponha que o desvio padr√£o para ambos os estados seja de 4 polegadas. Foi obtida uma amostra de 30 anos de √≠ndices pluviom√©tricos para a Calif√≥rnia e uma amostra de 45 anos de √≠ndices pluviom√©tricos para Nova York. 
#a. Mostre a distribui√ß√£o de probabilidade da precipita√ß√£o m√©dia anual da amostra para a Calif√≥rnia.
 ##b. Qual √© a probabilidade de que a m√©dia amostral esteja dentro de 1 polegada da m√©dia populacional da Calif√≥rnia? 
#c. Qual √© a probabilidade de que a m√©dia amostral esteja dentro de 1 polegada da m√©dia populacional de Nova York? 
#d. Em que caso, item (b) ou item (c), a probabilidade de obter uma m√©dia amostral dentro de 1 polegada da m√©dia populacional √© maior? Por qu√™?


from scipy.stats import norm
import numpy as np

# Dados da Calif√≥rnia
mu_ca = 22              # m√©dia
sigma_ca = 4            # desvio padr√£o
n_ca = 30               # tamanho da amostra
erro_padrao_ca = sigma_ca / np.sqrt(n_ca)

# Probabilidade de estar dentro de 1 polegada da m√©dia
z_ca = 1 / erro_padrao_ca
prob_ca = norm.cdf(z_ca) - norm.cdf(-z_ca)

# Dados de Nova York
mu_ny = 42
sigma_ny = 4
n_ny = 45
erro_padrao_ny = sigma_ny / np.sqrt(n_ny)

z_ny = 1 / erro_padrao_ny
prob_ny = norm.cdf(z_ny) - norm.cdf(-z_ny)

# Resultados
print(f"Calif√≥rnia:")
print(f"  Erro padr√£o: {erro_padrao_ca:.4f}")
print(f"  Probabilidade de estar dentro de 1 in: {prob_ca:.4f} ou {prob_ca*100:.2f}%\n")

print(f"Nova York:")
print(f"  Erro padr√£o: {erro_padrao_ny:.4f}")
print(f"  Probabilidade de estar dentro de 1 in: {prob_ny:.4f} ou {prob_ny*100:.2f}%")

# Compara√ß√£o
if prob_ca > prob_ny:
    print("\nüîç A probabilidade √© maior para a Calif√≥rnia.")
else:
    print("\nüîç A probabilidade √© maior para Nova York.")

 #Quest√£o 31 Uma amostra aleat√≥ria simples de tamanho 100 √© selecionada a partir de uma popula√ß√£o com p = 0,40. 
 # a. Qual √© o valor esperado de p? 
 # b. Qual √© o erro padr√£o de p? 
 # c. Mostre a distribui√ß√£o amostral de p.
 # d. O que a distribui√ß√£o amostral de p mostra?
 
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

# Par√¢metros
p = 0.40
n = 100
erro_padrao_p = np.sqrt(p * (1 - p) / n)

# Gerando uma distribui√ß√£o amostral de p
x = np.linspace(0, 1, 1000)
y = norm.pdf(x, p, erro_padrao_p)

# Plotando a distribui√ß√£o
plt.plot(x, y, label=r'$\hat{p} \sim N(0.40, 0.049)$')
plt.fill_between(x, y, alpha=0.2)
plt.title("Distribui√ß√£o Amostral de p")
plt.xlabel("Propor√ß√£o Amostral (pÃÇ)")
plt.ylabel("Densidade de Probabilidade")
plt.legend()
plt.grid(True)
plt.show()

